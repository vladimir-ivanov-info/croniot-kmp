[versions]
agp = "8.5.0"
android-compileSdk = "34"
android-minSdk = "33"
android-targetSdk = "34"
androidx-activityCompose = "1.9.0"
androidx-appcompat = "1.7.0"
androidx-constraintlayout = "2.1.4"
androidx-core-ktx = "1.13.1"
androidx-espresso-core = "3.6.1"
androidx-material = "1.12.0"
androidx-test-junit = "1.2.1"
compose-plugin = "1.6.11"
junit = "4.13.2"
kotlin = "2.0.0"
ktor = "2.3.12"
logback = "1.5.6"

gson = "2.11.0"

koin = "3.6.0-wasm-alpha2"
navigation = "2.8.0-alpha07"
compose = "1.7.0-alpha07"
lifecycle = "2.7.0"
coroutines = "1.7.3"
kotlinBom = "1.9.0"
retrofit = "2.11.0"
okhttp = "4.9.3"
#junit = "4.13.2"
mockk = "1.12.0"
assertj = "3.26.0"
activityKtx = "1.9.1"

mqtt = "1.2.5"
composeMaterial3 = "1.3.0-alpha05"
junitJupiter = "5.8.1" # or your desired version

#Server:
#kotlin = "1.9.22"
mysql = "8.0.33"
#coroutines = "1.7.3"
#gson = "2.10.1"
#mqtt = "1.2.5"
#ktor = "2.1.0"
#logback = "1.5.3"
#commons = "file:///home/vladimir/projects/IoT/commons/build/libs/commons.jar"
postgres = "42.7.3"
hibernate = "6.4.1.Final"
ehcache = "2.10.6"
mapstruct = "1.6.0.Beta1"
serializationJson = "1.3.2"
dagger = "2.51.1"
#mockk = "1.13.11"
h2 = "2.2.224"
testcontainers = "1.19.0"
#junitJupiter = "5.9.0"

maps = "18.1.0"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }

gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }

koinAndroid = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koinCompose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
navigationCompose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation" }
coreKtx = { module = "androidx.core:core-ktx", version = "1.13.0" }
lifecycleRuntime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycleViewModelCompose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
coroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }



okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttpLoggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
converterGson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
kotlinBom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlinBom" }
androidx-activity-ktx = { group = "androidx.activity", name = "activity-ktx", version.ref = "activityKtx" }

mqtt = { group = "org.eclipse.paho", name = "org.eclipse.paho.client.mqttv3", version.ref = "mqtt" }
composeMaterial3 = { group = "androidx.compose.material3", name = "material3", version.ref = "composeMaterial3" }
junit-jupiter = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junitJupiter" }

composeUiTestJunit4 = { group = "androidx.compose.ui", name = "ui-test-junit4", version.ref = "compose" }

#Server:
#kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
mysql-connector-java = { module = "mysql:mysql-connector-java", version.ref = "mysql" }
#coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
#gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
paho-mqtt = { module = "org.eclipse.paho:org.eclipse.paho.client.mqttv3", version.ref = "mqtt" }
#ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
#ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-serialization-gson = { module = "io.ktor:ktor-serialization-gson", version.ref = "ktor" }
ktor-serialization-kotlinx = { module = "io.ktor:ktor-serialization-kotlinx-jvm", version.ref = "ktor" }
ktor-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor" }
ktor-cors = { module = "io.ktor:ktor-server-cors-jvm", version.ref = "ktor" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
#No longer needed since we are using KMM: commons = { module = "commons", version.ref = "commons" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgres" }
hibernate-core = { module = "org.hibernate:hibernate-core", version.ref = "hibernate" }
hibernate-entitymanager = { module = "org.hibernate:hibernate-entitymanager", version = "6.0.0.Alpha7" }
ehcache = { module = "net.sf.ehcache:ehcache", version = "2.10.6" }
hibernate-ehcache = { module = "org.hibernate:hibernate-ehcache", version = "5.4.12.Final" }
javax-persistence = { module = "javax.persistence:javax.persistence-api", version = "2.2" }
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }
serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serializationJson" }
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junitJupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junitJupiter" }
#ktor-server-tests = { module = "io.ktor:ktor-server-tests", version.ref = "ktor" }
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin" }


google-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "maps" }


[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }